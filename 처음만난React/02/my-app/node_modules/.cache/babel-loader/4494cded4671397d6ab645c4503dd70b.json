{"ast":null,"code":"var _jsxFileName = \"/Users/serinkim/Documents/FEstudy/\\u110E\\u1165\\u110B\\u1173\\u11B7\\u1106\\u1161\\u11AB\\u1102\\u1161\\u11ABReact/02/my-app/src/Chapter10/Calculator.js\";\nimport React from 'react';\nimport TemperatureInput from './TemperatureInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoilingVerdict(props) {\n  if (props.celcius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nfunction toCelcius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celcius) {\n  return celcius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCelsiusChange = temperature => {\n      this.setState({\n        scale: 'c',\n        temperature: temperature\n      });\n    };\n\n    this.handleFehrenheitChange = temperature => {\n      this.setState({\n        scale: 'f',\n        temperature: temperature\n      });\n    };\n\n    this.state = {\n      scale: 'c',\n      temperature: ''\n    };\n  }\n\n  render() {\n    const {\n      scale,\n      temperature\n    } = this.state;\n    const celcius = scale === 'f' ? tryConvert(temperature, toCelcius) : temperature;\n    const fehrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celcius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFehrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celcius: parseFloat(celcius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/Users/serinkim/Documents/FEstudy/처음만난React/02/my-app/src/Chapter10/Calculator.js"],"names":["React","TemperatureInput","BoilingVerdict","props","celcius","toCelcius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","Calculator","Component","constructor","handleCelsiusChange","setState","scale","handleFehrenheitChange","state","render","fehrenheit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,MAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KALQF,c;;AAOT,SAASG,SAAT,CAAmBC,UAAnB,EAA+B;AAC3B,SAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAED,SAASC,YAAT,CAAsBH,OAAtB,EAA+B;AAC3B,SAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AAED,SAASI,UAAT,CAAoBC,WAApB,EAAiCC,OAAjC,EAA0C;AACtC,QAAMC,KAAK,GAAGC,UAAU,CAACH,WAAD,CAAxB;;AACA,MAAII,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACrB,WAAO,EAAP;AACH;;AACD,QAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,SAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AAED,MAAMC,UAAN,SAAyBpB,KAAK,CAACqB,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACnB,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBoB,mBATmB,GASId,WAAD,IAAiB;AACnC,WAAKe,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAC,GAAR;AAAahB,QAAAA,WAAW,EAAEA;AAA1B,OAAd;AACH,KAXkB;;AAAA,SAanBiB,sBAbmB,GAaOjB,WAAD,IAAiB;AACtC,WAAKe,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAC,GAAR;AAAahB,QAAAA,WAAW,EAAEA;AAA1B,OAAd;AACH,KAfkB;;AAGf,SAAKkB,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,GADE;AAEThB,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAUDmB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,KAAF;AAAShB,MAAAA;AAAT,QAAyB,KAAKkB,KAApC;AACA,UAAMvB,OAAO,GAAGqB,KAAK,KAAK,GAAV,GAAgBjB,UAAU,CAACC,WAAD,EAAcJ,SAAd,CAA1B,GAAqDI,WAArE;AACA,UAAMoB,UAAU,GAAGJ,KAAK,KAAK,GAAV,GAAgBjB,UAAU,CAACC,WAAD,EAAcF,YAAd,CAA1B,GAAwDE,WAA3E;AAEA,wBACI;AAAA,8BACI,QAAC,gBAAD;AACI,QAAA,KAAK,EAAC,GADV;AAEI,QAAA,WAAW,EAAEL,OAFjB;AAGI,QAAA,mBAAmB,EAAE,KAAKmB;AAH9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AACI,QAAA,KAAK,EAAC,GADV;AAEI,QAAA,WAAW,EAAEjB,UAFjB;AAGI,QAAA,mBAAmB,EAAE,KAAKoB;AAH9B;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI,QAAC,cAAD;AACI,QAAA,OAAO,EAAEd,UAAU,CAACR,OAAD;AADvB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAvCoC","sourcesContent":["import React from 'react';\nimport TemperatureInput from './TemperatureInput';\n\nfunction BoilingVerdict(props) {\n    if (props.celcius >= 100) {\n        return <p>The water would boil.</p>\n    }\n    return <p>The water would not boil.</p>\n}\n\nfunction toCelcius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celcius) {\n    return (celcius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            scale: 'c',\n            temperature: ''\n        }\n    }\n\n    handleCelsiusChange = (temperature) => {\n        this.setState({ scale:'c', temperature: temperature });\n    }\n\n    handleFehrenheitChange = (temperature) => {\n        this.setState({ scale:'f', temperature: temperature });\n    }\n\n    render() {\n        const { scale, temperature } = this.state;\n        const celcius = scale === 'f' ? tryConvert(temperature, toCelcius) : temperature;\n        const fehrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n        return (\n            <div>\n                <TemperatureInput\n                    scale='c'\n                    temperature={celcius}\n                    onTemperatureChange={this.handleCelsiusChange} />\n                <TemperatureInput\n                    scale='f'\n                    temperature={fahrenheit}\n                    onTemperatureChange={this.handleFehrenheitChange} />\n\n                <BoilingVerdict\n                    celcius={parseFloat(celcius)} />\n            </div>\n        )\n\n    }\n}"]},"metadata":{},"sourceType":"module"}