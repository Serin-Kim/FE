{"ast":null,"code":"var _jsxFileName = \"/Users/serinkim/Documents/FEstudy/\\u110E\\u1165\\u110B\\u1173\\u11B7\\u1106\\u1161\\u11AB\\u1102\\u1161\\u11ABReact/02/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Comment from './Comment';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commentsFromServer = [{\n  id: 1,\n  name: 'Serin Kim',\n  content: 'My comment!'\n}, {\n  id: 2,\n  name: '현빈',\n  content: '이게 최선입니까? 확실해요?'\n}, {\n  id: 3,\n  name: 'Tony Stark',\n  content: 'I am Iron Man. '\n}];\nlet timer;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    let comments = this.state.comments;\n    timer = setInterval(() => {\n      // if (comments.length < commentsFromServer.length) {\n      //   let index = comments.length;\n      //   comments.push(commentsFromServer[index]);\n      //   this.setState({\n      //     comments: comments\n      //   });\n      if (comments.length > 0) {\n        comments.pop();\n        this.setState({\n          comments: comments\n        });\n      } else if (timer) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  render() {\n    const {\n      comments\n    } = this.state; // comments를 state에서 가져온다. \n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        padding: 16,\n        backgroundColor: '#282c34'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 18\n          }, this), \" and save to reload.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map((comment, index) => {\n          return /*#__PURE__*/_jsxDEV(Comment, {\n            id: comment.id,\n            name: comment.name,\n            content: comment.content\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/serinkim/Documents/FEstudy/처음만난React/02/my-app/src/App.js"],"names":["Comment","React","commentsFromServer","id","name","content","timer","App","Component","constructor","props","state","comments","componentDidMount","setInterval","length","pop","setState","clearInterval","render","padding","backgroundColor","logo","map","comment","index"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAG,CACzB;AAAEC,EAAAA,EAAE,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAE,WAAd;AAA2BC,EAAAA,OAAO,EAAE;AAApC,CADyB,EAEzB;AAAEF,EAAAA,EAAE,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAE,IAAd;AAAoBC,EAAAA,OAAO,EAAE;AAA7B,CAFyB,EAGzB;AAAEF,EAAAA,EAAE,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAE,YAAd;AAA4BC,EAAAA,OAAO,EAAE;AAArC,CAHyB,CAA3B;AAMA,IAAIC,KAAJ;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAID,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACAN,IAAAA,KAAK,GAAGQ,WAAW,CAAC,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,UAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBH,QAAAA,QAAQ,CAACI,GAAT;AACA,aAAKC,QAAL,CAAc;AACVL,UAAAA,QAAQ,EAAEA;AADA,SAAd;AAID,OAND,MAMO,IAAIN,KAAJ,EAAW;AAChBY,QAAAA,aAAa,CAACZ,KAAD,CAAb;AACD;AACF,KAhBkB,EAgBhB,IAhBgB,CAAnB;AAiBD;;AAEDa,EAAAA,MAAM,GAAI;AAER,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAA1B,CAFQ,CAE0B;;AAGlC,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAES,QAAAA,OAAO,EAAC,EAAV;AAAcC,QAAAA,eAAe,EAAE;AAA/B,OAA5B;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,2CACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,IAAI,EAAC,qBAFP;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA,kBACGV,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,8BACE,QAAC,OAAD;AAEE,YAAA,EAAE,EAAED,OAAO,CAACrB,EAFd;AAGE,YAAA,IAAI,EAAEqB,OAAO,CAACpB,IAHhB;AAIE,YAAA,OAAO,EAAEoB,OAAO,CAACnB;AAJnB,aACOmB,OAAO,CAACrB,EADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAlE+B;;AAwElC,eAAeI,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Comment from './Comment';\nimport React from 'react';\n\nconst commentsFromServer = [\n  { id:1, name: 'Serin Kim', content: 'My comment!' },\n  { id:2, name: '현빈', content: '이게 최선입니까? 확실해요?' },\n  { id:3, name: 'Tony Stark', content: 'I am Iron Man. ' },\n]\n\nlet timer;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comments: [],\n    };\n  } \n\n  componentDidMount() {\n    let comments = this.state.comments;\n    timer = setInterval(() => {\n      // if (comments.length < commentsFromServer.length) {\n      //   let index = comments.length;\n      //   comments.push(commentsFromServer[index]);\n      //   this.setState({\n      //     comments: comments\n      //   });\n      if (comments.length > 0) {\n        comments.pop();\n        this.setState({\n            comments: comments\n        });\n      \n      } else if (timer) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  }\n\n  render () {\n    \n    const { comments } = this.state;  // comments를 state에서 가져온다. \n\n\n    return (\n      <div className=\"App\" style={{ padding:16, backgroundColor: '#282c34'}}>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <div>\n          {comments.map((comment, index) => {\n            return (\n              <Comment \n                key={comment.id}\n                id={comment.id}\n                name={comment.name}\n                content={comment.content}/>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n  \n}\n\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}